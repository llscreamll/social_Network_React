{"version":3,"sources":["components/Users/Users.module.css","components/Common/Paginator/Paginator.module.css","components/Common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchFrom.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalUserCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","style","paginator","buttonLeft","buttonClick","onClick","filter","p","map","selectedPage","pageNumber","key","e","buttonRight","User","user","followingProgress","follow","unFollow","isAuth","usersBorder","to","id","src","photos","small","avatar","alt","name","statusPage","status","followed","disabled","some","usersSearchFormValidate","values","UsersSearchForm","React","memo","props","initialValues","term","friend","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","type","as","value","Users","users","usersPages","usersPage","el","getUsers","createSelector","state","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getIsAuth","auth","getUsersFilter","UsersContainer","getUsersThunk","this","pageUsers","Component","compose","connect"],"mappings":"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","file":"static/js/4.d0a04cc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageUsers\":\"Users_pageUsers__39Agt\",\"usersPage\":\"Users_usersPage__12vKJ\",\"users\":\"Users_users__3Cj-e\",\"statusPage\":\"Users_statusPage__1lxlN\",\"usersBorder\":\"Users_usersBorder__23uqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__21QvK\",\"pageNumber\":\"Paginator_pageNumber__3WhEz\",\"selectedPage\":\"Paginator_selectedPage__1Y4oU\",\"buttonClick\":\"Paginator_buttonClick__3Y8NQ\",\"buttonLeft\":\"Paginator_buttonLeft__hagBj\",\"buttonRight\":\"Paginator_buttonRight__2duI2\"};","import React, {useState} from 'react';\r\nimport style from \"./Paginator.module.css\"\r\n// import cn from \"classnames\";\r\n\r\ntype PropsType  = {\r\n    totalUserCount : number\r\n    pageSize: number\r\n    currentPage : number\r\n    onPageChanged : (pageNumber : number) => void\r\n    portionSize? : number\r\n}\r\n\r\n    let Paginator : React.FC<PropsType> = ({totalUserCount,\r\n                                           pageSize,\r\n                                           currentPage,\r\n                                           onPageChanged,\r\n                                           portionSize = 20}) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages : Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n    <div className={style.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button className={`${style.buttonLeft} ${style.buttonClick}`} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={currentPage === p ? style.selectedPage : style.pageNumber}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button className={`${style.buttonRight} ${style.buttonClick}`} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport avatar from \"../images/avatar.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./Users.module.css\"\r\nimport { UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    isAuth: boolean\r\n    followingProgress: Array<number>\r\n    follow : (userId : number) => void\r\n    unFollow : (userId : number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user,followingProgress,follow,unFollow,isAuth}) => {\r\n\r\n    return (\r\n            <div className={style.usersBorder}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                <img src={user.photos.small != null ? user.photos.small : avatar} alt=\"logo\"/>\r\n                </NavLink>\r\n\r\n                <div>{user.name}</div>\r\n                <div className={style.statusPage}>{user.status}</div>\r\n\r\n                {isAuth ? <div>\r\n                    {user.followed ? <button disabled={followingProgress.some(id => id === user.id)} onClick={\r\n                            () => { unFollow(user.id) }\r\n                        }>Отписаться</button> :\r\n                        <button disabled={followingProgress.some(id => id === user.id) } onClick={\r\n                            () => { follow(user.id) }\r\n\r\n                        }>Подписаться</button>}\r\n                </div>\r\n                    : <button disabled={true} >Подписаться</button>}\r\n\r\n            </div>\r\n\r\n    )\r\n            }\r\n\r\nexport default User;","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\n\r\nlet usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\ntype FormType = {\r\n    term: string\r\n    friend: \"true\" | \"false\" | \"null\"\r\n}\r\n\r\ntype propsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\nexport const UsersSearchForm: React.FC<propsType> = React.memo((props) => {\r\n        const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n            }\r\n            props.onFilterChanged(filter)\r\n            setSubmitting(false)\r\n        }\r\n        return (\r\n            <div>\r\n                <Formik\r\n                    initialValues={{term: '', friend: 'null'}}\r\n                    validate={usersSearchFormValidate}\r\n                    onSubmit={submit}\r\n                >\r\n                    {({isSubmitting}) => (\r\n                        <Form>\r\n                            <Field type=\"text\" name=\"term\"/>\r\n                            <Field name=\"friend\" as=\"select\">\r\n                                <option value=\"null\">All</option>\r\n                                <option value=\"true\">Only followed</option>\r\n                                <option value=\"false\">Only not followed</option>\r\n                            </Field>\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                                Find\r\n                            </button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n)","import React, {FC} from 'react';\r\nimport {UserType} from '../../types/types';\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport style from \"./Users.module.css\"\r\nimport {UsersSearchForm} from \"./UsersSearchFrom\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\n\r\n\r\ntype usersType = {\r\n    currentPage: number\r\n    totalUserCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    followingProgress: Array<number>\r\n    follow: (UserId: number) => void\r\n    unFollow: (UserId: number) => void\r\n    isAuth: boolean\r\n    onFilterChanged : (filter: FilterType) => void\r\n}\r\n\r\nlet Users: FC<usersType> = ({\r\n                                currentPage,\r\n                                totalUserCount,\r\n                                pageSize,\r\n                                onPageChanged,\r\n                                users,\r\n                                followingProgress,\r\n                                follow,\r\n                                isAuth,\r\n                                unFollow,\r\n                                ...props\r\n                            }) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <UsersSearchForm onFilterChanged={props.onFilterChanged} />\r\n\r\n            </div>\r\n            <div className={style.usersPages}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalUserCount={totalUserCount}\r\n                           pageSize={pageSize}\r\n                           onPageChanged={onPageChanged}\r\n                />\r\n                <div className={style.usersPage}>\r\n                    {\r\n                        users.map(el => {\r\n                            return (\r\n                                <div className={style.users}>\r\n                                    <User user={el}\r\n                                          followingProgress={followingProgress}\r\n                                          isAuth={isAuth}\r\n                                          follow={follow}\r\n                                          unFollow={unFollow}\r\n                                          key={el.id}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </>)\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state : AppStateType) =>{\r\n    return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector( getUsersSelector, (users) =>{\r\n  return   users.filter(el => true)\r\n})\r\nexport const getPageSize = (state : AppStateType) =>{\r\n    return state.usersPage.pageSize;\r\n\r\n};\r\nexport const getTotalUserCount = (state : AppStateType) =>{\r\n    return state.usersPage.totalUserCount;\r\n};\r\nexport const getCurrentPage = (state : AppStateType) =>{\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state : AppStateType) =>{\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state : AppStateType) =>{\r\n    return state.usersPage.followingInProgress;\r\n};\r\nexport  const getIsAuth = (state : AppStateType) =>{\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getUsersFilter =(state : AppStateType) =>{\r\n    return state.usersPage.filter\r\n}\r\n\r\n\r\n\r\n","import {getUsersThunk, follow, unFollow, FilterType,} from \"../../redux/users-reducer\";\r\nimport style from \"./Users.module.css\"\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Reloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUserCount: number\r\n    users: Array<UserType>\r\n    followingProgress: Array<number>\r\n    filter: FilterType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUsersThunk: (currentPage: number, pageSize: number,filter:FilterType) => void\r\n    follow: (UserId: number) => void\r\n    unFollow: (UserId: number) => void\r\n\r\n}\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n\r\n}\r\ntype propsType = MapStateToPropsType & mapDispatchToPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<propsType> {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const {currentPage, pageSize,filter} = this.props;\r\n\r\n       this.props.getUsersThunk(currentPage,pageSize,filter);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n\r\n        const {pageSize,filter} = this.props;\r\n        this.props.getUsersThunk(pageNumber, pageSize,filter);\r\n    }\r\n\r\n    onFilterChanged = (filter : FilterType) =>{\r\n        const { pageSize} = this.props;\r\n        this.props.getUsersThunk(1, pageSize,filter);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            <div className={style.pageUsers}>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       followingProgress={this.props.followingProgress}\r\n                       follow={this.props.follow}\r\n                       unFollow={this.props.unFollow}\r\n                       isAuth={this.props.isAuth}\r\n                       onFilterChanged={this.onFilterChanged}\r\n                />\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        filter: getUsersFilter(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    //  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\r\n    connect<MapStateToPropsType, mapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateProps, {\r\n        getUsersThunk,\r\n        follow,\r\n        unFollow\r\n    }))(UsersContainer)\r\n"],"sourceRoot":""}